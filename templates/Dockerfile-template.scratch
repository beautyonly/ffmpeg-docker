# ffmpeg - http://ffmpeg.org/download.html
#
# https://github.com/beautyonly/ffmpeg-docker
#
#

FROM        alpine:3.5 AS build

WORKDIR     /tmp/workdir

ARG        PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig
ARG        LD_LIBRARY_PATH=/opt/ffmpeg/lib
ARG        PREFIX=/opt/ffmpeg
ARG        MAKEFLAGS="-j2"

ENV         %%ENV%%

RUN     buildDeps="autoconf \
                   automake \
                   bash \
                   binutils \
                   bzip2 \
                   cmake \
                   curl \
                   coreutils \
                   diffutils \
                   expat-dev \
                   file \
                   g++ \
                   gcc \
                   gperf \
                   libtool \
                   make \
                   python \
                   openssl-dev \
                   tar \
                   yasm \
                   zlib-dev" && \
        apk  add --update ${buildDeps} libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0

%%RUN%%

RUN \
        mkdir -p /tmp/fakeroot/lib  && \
        ldd ${PREFIX}/bin/ffmpeg | cut -d ' ' -f 3 | strings | xargs -I R cp R /tmp/fakeroot/lib/ && \
        for lib in /tmp/fakeroot/lib/*; do strip --strip-all $lib; done && \
        cp -r ${PREFIX}/bin /tmp/fakeroot/bin/ && \
        cp -r ${PREFIX}/share/ffmpeg /tmp/fakeroot/share/ && \
        LD_LIBRARY_PATH=/tmp/fakeroot/lib /tmp/fakeroot/bin/ffmpeg -buildconf

### Release Stage
FROM        scratch AS release
MAINTAINER  Beauty Rottenberg <bybeauby@rottenberg.info>

CMD         ["--help"]
ENTRYPOINT  ["/bin/ffmpeg"]

COPY --from=build /tmp/fakeroot/ /


# Let's make sure the app built correctly
# Convenient to verify on https://github.com/beautyonly/ffmpeg-docker console output
